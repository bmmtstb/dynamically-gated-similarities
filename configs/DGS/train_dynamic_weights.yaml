name: "Train-Dynamic-Weights-Individually"
description: "Train and eval a similarity engine with a dynamic alpha combine module with a single similarity.

During training, this runs over a whole (combined) dataset using all but the first frame of every video for training,
and the custom ImageHistory dataset classes.

For evaluation one of the following two approaches can be used:
 - Evaluate the accuracy using the gt data and the accuracy predictions. Here the ImageHistory dataset class is used.
 - Evaluate using the regular MOTA / HOTA pipeline.
   Here a regular Image dataset class is used per video, iterating over every video.

The tests are performed using the regular MOTA / HOTA pipeline. Every dataset contains one video."

device: "cuda:0"
print_prio: "WARNING"
#print_prio: "INFO"
#print_prio: "DEBUG"
is_training: on
log_dir: "./results/own/train_single/"
log_dir_add_date: false
# log_dir_suffix:  # will be set by python script

# ###### #
# ENGINE #
# ###### #

engine:
    module_name: "DGSEngine"

test:
    inactivity_threshold: 15
    max_track_length: 1
    save_images: off
    submission: "submission_pt21"  # will be changed in python script
    
train:
    acc_k_train: [1, 5, 10, 20]
    acc_k_eval: [0.1, 0.5, 1, 5, 10, 25]
    # submission:  # will be set in python script
    load_image_crops: false  # will be changed in python script
    loss: "TorchMSELoss"
    loss_kwargs: {}
    optimizer: "Adam"
    optimizer_kwargs:
        lr: 0.0001  # 1e-4
        foreach: true
    epochs: 4
    save_interval: 1
    scheduler: "StepLR"
    scheduler_kwargs:
        step_size: 2
        gamma: 0.1

# ####### #
# MODULES #
# ####### #

submission_pt21:
    module_name: "PoseTrack21"
    # file: # will be set in python script

submission_MOT:
    module_name: "MOT"
    # file: # will be set in python script

dac_train:
    module_name: "dynamic_alpha"
    softmax: false
    # alpha_modules:  # will be set in python script

dac_test:
    module_name: "dynamic_alpha"
    softmax: true
    # alpha_modules:  # will be set in python script

DGSModule:
    module_name: "DGS"
    # names:  # will be set in python script
    combine: "dac_train"  # will be changed in python script for validation and tests
    new_track_weight: 0.0

# #### #
# DATA #
# #### #

test_dl_Dance_256x192_gt:
    module_name: "MOTImage"
    dataset_path: "./data/DanceTrack/test/"
    # data_path: # will be set in python script
    paths: "./data/DanceTrack/test/**/det/rcnn_075_035_256x192.txt"
    
    batch_size: 1
    collate_fn: "lists"
    
    crop_size: !!python/tuple [256, 192]
    crop_mode: "zero-pad"
    
    crop_key: "rcnn_075_035_256x192"


val_dl_Dance_256x192_rcnn_075_035:
    module_name: "MOTImage"
    dataset_path: "./data/DanceTrack/val/"
    # data_path: # will be set in python script
    paths: "./data/DanceTrack/val/**/det/rcnn_075_035_256x192.txt"
    
    batch_size: 1
    collate_fn: "lists"
    
    crop_size: !!python/tuple [256, 192]
    crop_mode: "zero-pad"
    
    crop_key: "rcnn_075_035_256x192"

val_dl_Dance_256x192_gt:
    module_name: "MOTImage"
    dataset_path: "./data/DanceTrack/val/"
    # data_path: # will be set in python script
    paths: "./data/DanceTrack/val/**/gt/gt.txt"
    
    batch_size: 1
    collate_fn: "lists"
    
    crop_key: "Crops"
    crop_size: !!python/tuple [256, 192]
    crop_mode: "zero-pad"

val_dl_Dance_256x192_eval_acc:
    module_name: "Concat_MOTImageHistory"
    shuffle: false
    dataset_path: "./data/DanceTrack/val/"
    paths: "./data/DanceTrack/val/**/gt/gt.txt"
#    paths: "./data/DanceTrack/val_part/**/gt/gt.txt"
    
    L: 1
    
    batch_size: 1
    collate_fn: "history"
    
    crop_key: "Crops"
    crop_size: !!python/tuple [ 256, 192 ]
    crop_mode: "zero-pad"


train_dl_Dance_256x192_gt:
    module_name: "Concat_MOTImageHistory"
    shuffle: true
    dataset_path: "./data/DanceTrack/train/"
    paths: "./data/DanceTrack/train/**/gt/gt.txt"
#    paths: "./data/DanceTrack/train_part/**/gt/gt.txt"
    
    L: 1
    
    batch_size: 32
    collate_fn: "history"
    
    crop_size: !!python/tuple [ 256, 192 ]
    crop_mode: "zero-pad"

test_dl_pt21_256x192_rcnn_085_040:
    module_name: "KeypointRCNNImageBackbone"
    dataset_path: "./data/PoseTrack21/"
    crops_folder: "./data/PoseTrack21/crops/256x192/rcnn_085_040_test/"  # dataset name will be added during init
    # data_path:  # will be set in python script

    batch_size: 1
    collate_fn: "lists"

    crop_size: !!python/tuple [256, 192]
    crop_mode: "zero-pad"

val_dl_pt21_256x192_gt:
    module_name: "PoseTrack21_Image"
    dataset_path: "./data/PoseTrack21/"
    # data_path:  # will be set in python script
    paths: "./data/PoseTrack21/posetrack_data/val/**.json"
    crops_folder: "./data/PoseTrack21/crops/256x192/val/"
    
    batch_size: 1
    collate_fn: "lists"

    load_img_crops: false
    crop_size: !!python/tuple [256, 192]  # [H,W]
    crop_mode: "zero-pad"

val_dl_pt21_256x192_rcnn_085_040:
    module_name: "PoseTrack21_Image"
    # data_path:  # will be set in python script
    dataset_path: "./data/PoseTrack21/"
    crops_folder: "./data/PoseTrack21/crops/256x192/rcnn_085_040_val/"  # dataset name will be added during init
    paths: "./data/PoseTrack21/posetrack_data/256x192_rcnn_085_040_val/*.json"

    batch_size: 1
    collate_fn: "lists"

    crop_size: !!python/tuple [256, 192]
    crop_mode: "zero-pad"


val_dl_pt21_256x192_eval_acc:
    module_name: "Concat_PT21_ImageHistory"
    shuffle: false
    dataset_path: "./data/PoseTrack21/"
    paths: "./data/PoseTrack21/posetrack_data/val/*.json"
#    paths: "./data/PoseTrack21/posetrack_data/val_part/*.json"
    crops_folder: "./data/PoseTrack21/crops/256x192/val/"  # dataset name will be added during init
    
    L: 1
    
    batch_size: 1
    collate_fn: "history"
    
    load_img_crops: false
    crop_size: !!python/tuple [ 256, 192 ]
    crop_mode: "zero-pad"

train_dl_pt21_256x192_gt:
    module_name: "Concat_PT21_ImageHistory"
    shuffle: true
    dataset_path: "./data/PoseTrack21/"
    paths: "./data/PoseTrack21/posetrack_data/train/*.json"
#    paths: "./data/PoseTrack21/posetrack_data/train_part/*.json"
    crops_folder: "./data/PoseTrack21/crops/256x192/train/"  # dataset name will be added during init
    
    L: 1
    
    batch_size: 32
    collate_fn: "history"
    
    load_img_crops: false
    crop_size: !!python/tuple [ 256, 192 ]
    crop_mode: "zero-pad"

# ################## #
# SIMILARITY MODULES #
# ################## #

# BOX - IoU

box_xywh_sim:
    module_name: "iou"
    softmax: false
    train_key: "bbox_relative"

# Pose - OKS - COCO

pose_sim_coco:
    module_name: "oks"
    softmax: false
    train_key: "keypoints_relative"

    format: "coco"

# Visual - v1 - OSNet_x1_0 pretrained on ImageNet

OSNet_sim:
    module_name: "torchreid"
    softmax: false

    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["OSNet_embed_gen"]

OSNet_embed_gen:
    module_name: "torchreid"
    model_name: "osnet_x1_0"
    weights: "./weights/osnet_x1_0_imagenet.pth"
    nof_classes: 1000
    is_training: off


# Visual - v2 - OSNet_ain_x1_0 pretrained on ImageNet

OSNetAIN_sim:
    module_name: "torchreid"
    softmax: false
    
    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["OSNetAIN_embed_gen" ]

OSNetAIN_embed_gen:
    module_name: "torchreid"
    model_name: "osnet_ain_x1_0"
    weights: "./weights/osnet_ain_x1_0_imagenet.pth"
    nof_classes: 1000
    is_training: off

# Visual - v3 - resnet50 from same-domain Re-ID

Resnet50_sim:
    module_name: "torchreid"
    softmax: false
    
    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["Resnet50_embed_gen"]

Resnet50_embed_gen:
    module_name: "torchreid"
    model_name: "resnet50"
    weights: "pretrained"
    nof_classes: 1000
    is_training: off

# Visual - v4 - resnet152 from same-domain Re-ID

Resnet152_sim:
    module_name: "torchreid"
    softmax: false
    
    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["Resnet152_embed_gen"]

Resnet152_embed_gen:
    module_name: "torchreid"
    model_name: "resnet152"
    weights: "pretrained"
    nof_classes: 1000
    is_training: off

# ############# #
# ALPHA MODULES #
# ############# #

box_fc1:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 1]
    bias: true
    act_func: null

box_fc2:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 8, 1]
    bias: true
    act_func: null

box_fc1_Sigmoid:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 1]
    bias: true
    act_func: "Sigmoid"

box_fc1_Tanh:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 1]
    bias: true
    act_func: "Tanh"

box_fc1_ReLU:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 1]
    bias: true
    act_func: "ReLU"

box_fc2_LeakyReLU:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 8, 1]
    bias: true
    act_func: "LeakyReLU"

box_fc2_ReLUSigmoid:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 8, 1]
    bias: true
    act_func: ["ReLU", "Sigmoid"]

box_fc2_ReLU:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 8, 1]
    bias: true
    act_func: "ReLU"

box_fc2_Sigmoid:
    module_name: "FullyConnectedAlpha"
    name: "bbox"
    hidden_layers: [4, 8, 1]
    bias: true
    act_func: "Sigmoid"

    
# pose - COCO
pose_coco_fc1:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths: ["Flatten", ["pose_coco_fc1", "fc"]]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 34, 1 ]
        bias: true
        act_func: null

pose_coco_fc1_Sigmoid:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths: ["Flatten", ["pose_coco_fc1", "fc"]]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 34, 1 ]
        bias: true
        act_func: "Sigmoid"

pose_coco_fc2:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths: ["Flatten", ["pose_coco_fc2", "fc"]]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 34, 8, 1 ]
        bias: true
        act_func: null

pose_coco_fc2_ReLUSigmoid:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths: ["Flatten", ["pose_coco_fc2", "fc"]]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 34, 8, 1 ]
        bias: true
        act_func: ["ReLU", "Sigmoid"]

pose_coco_fc2_Sigmoid:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths: ["Flatten", ["pose_coco_fc2", "fc"]]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 34, 8, 1 ]
        bias: true
        act_func: "Sigmoid"


pose_coco_conv1o15k2fc1:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths:
        - Conv1d:
            in_channels: 17
            out_channels: 15
            kernel_size: 2
            groups: 1
            bias: True
        - "Flatten"
        - [ "pose_coco_conv1o15k2fc1", "fc" ]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 15, 1 ]
        bias: true
        act_func: null

pose_coco_conv1o15k2fc2:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths:
        - Conv1d:
            in_channels: 17
            out_channels: 15
            kernel_size: 2
            groups: 1
            bias: True
        - "Flatten"
        - [ "pose_coco_conv1o15k2fc2", "fc" ]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 15, 8, 1 ]
        bias: true
        act_func: null

pose_coco_conv1o15k2fc1_Sigmoid:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths:
        - Conv1d:
            in_channels: 17
            out_channels: 15
            kernel_size: 2
            groups: 1
            bias: True
        - "Flatten"
        - [ "pose_coco_conv1o15k2fc1", "fc" ]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 15, 1 ]
        bias: true
        act_func: "Sigmoid"

pose_coco_conv1o15k2fc2_ReLUSigmoid:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths:
        - Conv1d:
            in_channels: 17
            out_channels: 15
            kernel_size: 2
            groups: 1
            bias: True
        - "Flatten"
        - [ "pose_coco_conv1o15k2fc2", "fc" ]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 15, 8, 1 ]
        bias: true
        act_func: ["ReLU", "Sigmoid"]

pose_coco_conv1o15k2fc2_Sigmoid:
    module_name: "SequentialCombinedAlpha"
    name: "keypoints"
    paths:
        - Conv1d:
            in_channels: 17
            out_channels: 15
            kernel_size: 2
            groups: 1
            bias: True
        - "Flatten"
        - [ "pose_coco_conv1o15k2fc2", "fc" ]
    fc:
        module_name: "FullyConnectedAlpha"
        hidden_layers: [ 15, 8, 1 ]
        bias: true
        act_func: "Sigmoid"

# visual - OSNet
visual_osn_fc1:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 1]
  bias: true
  act_func: null
  
visual_osn_fc2:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 128, 1]
  bias: true
  act_func: null
  
visual_osn_fc3:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 256, 128, 1]
  bias: true
  act_func: null

visual_osn_fc3_2ReluSigmoid:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 256, 128, 1]
  bias: true
  act_func: ["ReLU", "ReLU", "Sigmoid"]

visual_osn_fc3_Sigmoid:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 256, 128, 1]
  bias: true
  act_func: "Sigmoid"

visual_osn_fc4:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 256, 128, 64, 1]
  bias: true
  act_func: null
  
visual_osn_fc5:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 256, 128, 64, 32, 1]
  bias: true
  act_func: null

visual_osn_fc5_4ReLUSigmoid:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [512, 256, 128, 64, 32, 1]
  bias: true
  act_func: ["ReLU", "ReLU", "ReLU", "ReLU", "Sigmoid"]
  
# visual - Resnet
visual_res_fc1:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [2048, 1]
  bias: true
  act_func: null
  
visual_res_fc2:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [2048, 512, 1]
  bias: true
  act_func: null
  
visual_res_fc3:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [2048, 512, 64, 1]
  bias: true
  act_func: null

visual_res_fc3_2ReLUSigmoid:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [2048, 512, 64, 1]
  bias: true
  act_func: ["ReLU", "ReLU", "Sigmoid"]
  
visual_res_fc4:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [2048, 1024, 256, 64, 1]
  bias: true
  act_func: null
  
visual_res_fc5:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [2048, 1024, 256, 128, 64, 1]
  bias: true
  act_func: null

visual_res_fc5_4ReLUSigmoid:
  module_name: "FullyConnectedAlpha"
  name: "image_crop"
  hidden_layers: [2048, 1024, 256, 128, 64, 1]
  bias: true
  act_func: ["ReLU", "ReLU", "ReLU", "ReLU", "Sigmoid"]
  
# combined models
