name: "Evaluate-Triplet-Combinations"
description: "Use the DGS tracker with a constant alpha module and a combination of three modules.
A python script will change the alpha values of the modules in 10% increments from 10 to 90 respectively."

device: "cuda:0"
print_prio: "INFO"
is_training: off
log_dir: "./results/own/eval/"
log_dir_add_date: false

test:
    inactivity_threshold: 15
    max_track_length: 1
    save_images: off
    submission: ["submission"]

engine:
    module_name: "DGSEngine"

# #### #
# DATA #
# #### #

dgs_pt21_rcnn_256x192_val:
    module_name: "PoseTrack21_Image"
    dataset_path: "./data/PoseTrack21/"
    # crops_folder:  # will be set in python script
    # base_path:  # will be set in python script
    # data_path:  # will be set in python script

    batch_size: 8
    collate_fn: "lists"

    crop_size: !!python/tuple [ 256, 192 ]
    crop_mode: "zero-pad"


dgs_pt21_gt_256x192_val:
    module_name: "PoseTrack21_Image"
    dataset_path: "./data/PoseTrack21/"
    crops_folder: "./data/PoseTrack21/crops/256x192/val/"
    base_path: "./data/PoseTrack21/posetrack_data/val/"
    # data_path:  # will be set in python script

    batch_size: 8
    collate_fn: "lists"

    crop_size: !!python/tuple [256, 192]
    crop_mode: "zero-pad"

submission:
    module_name: "PoseTrack21"
    # file: # will be set in python script

# ####### #
# MODULES #
# ####### #

combine_sim:
    module_name: "constant_alpha"
    # alpha: # will be set by python script

box_sim:
    module_name: "iou"

pose_sim:
    module_name: "oks"
    format: "coco"

vis_sim_OSNet:
    module_name: "torchreid"
    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["vis_embed_gen_OSNet"]

vis_embed_gen_OSNet:
    module_name: "torchreid"
    model_name: "osnet_x1_0"
    weights: "./weights/osnet_x1_0_imagenet.pth"
    nof_classes: 1000

vis_sim_OSNetAIN:
    module_name: "torchreid"
    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["vis_embed_gen_OSNetAIN"]

vis_embed_gen_OSNetAIN:
    module_name: "torchreid"
    model_name: "osnet_ain_x1_0"
    weights: "./weights/osnet_ain_x1_0_imagenet.pth"
    nof_classes: 1000

vis_sim_Resnet50:
    module_name: "torchreid"
    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["vis_embed_gen_Resnet50"]

vis_embed_gen_Resnet50:
    module_name: "torchreid"
    model_name: "resnet50"
    weights: "pretrained"
    nof_classes: 1000

vis_sim_Resnet152:
    module_name: "torchreid"
    metric: "NegSoftmaxEuclideanDist"
    embedding_generator_path: ["vis_embed_gen_Resnet152"]

vis_embed_gen_Resnet152:
    module_name: "torchreid"
    model_name: "resnet152"
    weights: "pretrained"
    nof_classes: 1000


# Combination 1 - OSNet

iou_oks_OSNet:
    module_name: "DGS"
    combine: "combine_sim"
    names: ["box_sim", "pose_sim", "vis_sim_OSNet"]

# Combination 2 - OSNetAIN

iou_oks_OSNetAIN:
    module_name: "DGS"
    combine: "combine_sim"
    names: ["box_sim", "pose_sim", "vis_sim_OSNetAIN"]

# Combination 3 - Resnet50

iou_oks_Resnet50:
    module_name: "DGS"
    combine: "combine_sim"
    names: ["box_sim", "pose_sim", "vis_sim_Resnet50"]

# Combination 4 - Resnet152

iou_oks_Resnet152:
    module_name: "DGS"
    combine: "combine_sim"
    names: ["box_sim", "pose_sim", "vis_sim_Resnet152"]
